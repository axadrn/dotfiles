local icons = require("config.icons").icons

vim.filetype.add({ extension = { templ = "templ" } })

return {
	"williamboman/mason.nvim",
	enabled = false,
	dependencies = {
		"williamboman/mason-lspconfig.nvim",
		"WhoIsSethDaniel/mason-tool-installer.nvim",
		"neovim/nvim-lspconfig",
		"saghen/blink.cmp",
		"folke/neodev.nvim",
	},
	config = function()
		local mason = require("mason")
		local mason_lspconfig = require("mason-lspconfig")
		local mason_tool_installer = require("mason-tool-installer")

		-- Basic diagnostics setup
		vim.keymap.set("n", "gl", vim.diagnostic.open_float, { desc = "Hover Diagnostics" })

		-- Basic LSP keymaps
		vim.api.nvim_create_autocmd("LspAttach", {
			callback = function(event)
				local opts = { buffer = event.buf }
				local function map(key, func, desc)
					opts.desc = desc
					vim.keymap.set("n", key, func, opts)
				end

				map("gd", vim.lsp.buf.definition, "Go to Definition")
				map("gr", vim.lsp.buf.references, "Find References")
				map("K", vim.lsp.buf.hover, "Hover Documentation")
			end,
		})

		-- LSP Setup
		local lsp_capabilities = require("blink.cmp").get_lsp_capabilities()

		-- Mason setup
		mason.setup()

		-- Configure language servers
		mason_lspconfig.setup({
			ensure_installed = {
				"lua_ls",
				"tsserver",
				"html",
				"cssls",
				"tailwindcss",
				"svelte",
				"gopls",
				"templ",
				"htmx",
				"astro",
				"bashls",
				"dockerls",
			},
			automatic_installation = true,
			handlers = {
				function(server)
					require("lspconfig")[server].setup({
						capabilities = lsp_capabilities,
					})
				end,
				lua_ls = function()
					require("neodev").setup()
					require("lspconfig").lua_ls.setup({
						capabilities = lsp_capabilities,
						settings = {
							Lua = {
								diagnostics = { globals = { "vim" } },
								workspace = {
									library = {
										[vim.fn.expand("$VIMRUNTIME/lua")] = true,
										[vim.fn.stdpath("config") .. "/lua"] = true,
									},
								},
							},
						},
					})
				end,
			},
		})

		-- Configure formatters/linters
		mason_tool_installer.setup({
			ensure_installed = {
				"prettierd",
				"stylua",
				"eslint_d",
				"goimports",
			},
		})
	end,
}
